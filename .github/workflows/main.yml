name: Build binary

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

env:
  ARDUINO_BOARD_MANAGER_ADDITIONAL_URLS: "http://arduino.esp8266.com/stable/package_esp8266com_index.json https://espressif.github.io/arduino-esp32/package_esp32_dev_index.json"

jobs:
  build:
    strategy:
      matrix:
        platform:
          - esp8266
          - esp32

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update version.h
        if: github.event_name != 'push' || github.ref_type != 'tag'
        run: cd HeishaMon && echo "static const char *heishamon_version = \"Alpha-$(git rev-parse --short HEAD)\";" > version.h && cat version.h
        shell: bash

      - name: Check tag version
        if: github.event_name == 'push' && github.ref_type == 'tag'
        env:
          TAG_VERSION: ${{ github.ref_name }}
        run: |
          cd HeishaMon
          echo -e "static const char *heishamon_version = \"${TAG_VERSION:1}\";" | diff -u --ignore-all-space --ignore-blank-lines version.h /dev/stdin
        shell: bash

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2

      - name: Install platform
        env:
          PLATFORM: ${{ matrix.platform }}
          VERSION_esp32: "@3.0.7"
          VERSION_VAR: VERSION_${{ matrix.platform }}
        run:  |
          arduino-cli core update-index
          arduino-cli core install "${PLATFORM}:${PLATFORM}${!VERSION_VAR}"

      - name: Install dependencies
        run:  arduino-cli lib install ringbuffer pubsubclient arduinojson dallastemperature onewire "Adafruit NeoPixel"

      - name: Fix Onewire lib for ESP32-3.0.0
        run: |
          sed -i '/#include <driver\/rtc_io\.h>/a\
          #include <soc\/gpio_struct\.h>' \
          /home/runner/Arduino/libraries/OneWire/util/OneWire_direct_gpio.h

      - name: Compile Sketch for ${{ matrix.platform }}
        env:
          GITHUB_REF_TYPE: ${{ github.ref_type }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          PLATFORM: ${{ matrix.platform }}
          FLAGS_esp8266: ":d1_mini:xtal=160,vt=flash,ssl=basic,mmu=3216,non32xfer=fast,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600"
          FLAGS_esp32: ":esp32s3:CDCOnBoot=cdc,PSRAM=enabled,PartitionScheme=min_spiffs"
          FLAGS_VAR: FLAGS_${{ matrix.platform }}
        run: |
          cd HeishaMon
          start=$(date +%s)
          arduino-cli compile --output-dir . \
            --fqbn=${PLATFORM}:${PLATFORM}${!FLAGS_VAR} \
            --warnings=none \
            --verbose \
            --no-color \
            HeishaMon.ino \
            | tee build.log
          if [ $? -ne 0 ]; then
            echo "${PLATFORM} build failed" 2>&1
            echo "## ${PLATFORM} build failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          end=$(date +%s)
          echo "## ${PLATFORM} build succeeded" >> $GITHUB_STEP_SUMMARY
          echo "Time: $((end-start)) seconds" >> $GITHUB_STEP_SUMMARY

          # Rename binary
          if [ "$GITHUB_REF_TYPE" == "tag" ]; then
            filename="HeishaMon_${PLATFORM}-${GITHUB_REF_NAME}.ino.bin"
          else
            filename="HeishaMon_${PLATFORM}-alpha-$(git rev-parse --short HEAD).ino.bin"
          fi
          mv HeishaMon.ino.bin $filename
          md5sum $filename > $filename.md5

          echo "Size: $(stat -c%s $filename) bytes" >> $GITHUB_STEP_SUMMARY
          echo "MD5: $(md5sum $filename | cut -d\  -f1)" >> $GITHUB_STEP_SUMMARY

          echo "" >> $GITHUB_STEP_SUMMARY
          tail -n+$(grep -n "Used library" build.log | cut -d: -f1) build.log >> $GITHUB_STEP_SUMMARY

        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: HeishaMon_${{ matrix.platform }}.ino.bin
          path: HeishaMon/HeishaMon_*.ino.bin*

  release:
    runs-on: ubuntu-latest

    needs: build

    permissions:
      contents: write

    if: github.event_name == 'push' && github.ref_type == 'tag'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: HeishaMon_*.ino.bin
          merge-multiple: true

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: HeishaMon_*.ino.bin*
